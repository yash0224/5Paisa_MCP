FROM node:20.19.1-bullseye

# Update package list and install Python dependencies
RUN apt-get update && \
    apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential \
    curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create symlinks for python commands
RUN ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

# Verify Python installation
RUN python3 --version && pip3 --version

# Set environment variables for Python
ENV PYTHONUNBUFFERED=1
ENV PATH="/usr/local/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy dependency files first for better caching
COPY package*.json ./

# Install dependencies
RUN npm install

# Install global dependencies (only if needed)
# RUN npm install -g ts-node mcp-framework

# Install required Python libraries with verbose output
RUN pip3 install --no-cache-dir --verbose py5paisa pyotp

# Copy all project files
COPY . .

# Build TypeScript
RUN npm run build

# Verify Python is accessible from the final environment
RUN which python3 && which python && python --version

# Create non-root user for security
RUN useradd -m -u 1001 appuser && \
    chown -R appuser:appuser /app
USER appuser

# Expose port 8080 for HTTP/SSE server
EXPOSE 8080

# Health check to ensure server is running (curl added above)
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Set NODE_ENV to production
ENV NODE_ENV=production

# Start application with proper signal handling
CMD ["node", "dist/index.js"]